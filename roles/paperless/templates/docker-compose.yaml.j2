version: "3.4"

volumes:
  {{ project_name }}_data:
    external: true
  {{ project_name }}_media:
    external: true
  {{ project_name }}_dbdata:
    external: true
  {{ project_name }}_redisdata:
    external: true

networks:
  default:
  web_backend:
      external: true

services:
  broker:
    image: docker.io/library/redis:7
    restart: unless-stopped
    volumes:
      - {{ project_name }}_redisdata:/data

  db:
    image: docker.io/library/mariadb:10
    restart: unless-stopped
    volumes:
      - {{ project_name }}_dbdata:/var/lib/mysql
    environment:
      MARIADB_HOST: db
      MARIADB_DATABASE: paperless
      MARIADB_USER: paperless
      MARIADB_PASSWORD: '{{ db_password | replace('$', '$$') }}'
      MARIADB_ROOT_PASSWORD: '{{ db_root_password | replace('$', '$$') }}'

  webserver:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    restart: unless-stopped
    depends_on:
      - db
      - broker
    expose:
      - "8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - {{ project_name }}_data:/usr/src/paperless/data
      - {{ media_dir }}:/usr/src/paperless/media
      - {{ export_dir }}:/usr/src/paperless/export:z
      - {{ consume_dir }}:/usr/src/paperless/consume:z
    networks:
      - default
      - web_backend
    #env_file: docker-compose.env
    environment:
      PAPERLESS_REDIS: redis://broker:6379
      PAPERLESS_DBENGINE: mariadb
      PAPERLESS_DBHOST: db
      PAPERLESS_DBUSER: paperless # only needed if non-default username
      PAPERLESS_DBPASS: '{{ db_password | replace('$', '$$') }}' # only needed if non-default password
      PAPERLESS_DBPORT: 3306
      # USERMAP_UID: 1000
      # USERMAP_GID: 1000
      PAPERLESS_URL: "https://{{ domain }}"
      PAPERLESS_TIKA_ENABLED: 1
      PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://gotenberg:3000
      PAPERLESS_TIKA_ENDPOINT: http://tika:9998
      PAPERLESS_OCR_LANGUAGE: deu+eng
      PAPERLESS_TASK_WORKERS: 2
      PAPERLESS_THREADS_PER_WORKER: 2
      PAPERLESS_CONSUMER_POLLING: {{ PAPERLESS_CONSUMER_POLLING | default(0) }}
      PAPERLESS_CONSUMER_POLLING_RETRY_COUNT: {{ PAPERLESS_CONSUMER_POLLING_RETRY_COUNT | default(5) }}
      PAPERLESS_CONSUMER_POLLING_DELAY: {{ PAPERLESS_CONSUMER_POLLING_DELAY | default(5) }}
      PAPERLESS_CONSUMER_ENABLE_BARCODES: {{ PAPERLESS_CONSUMER_ENABLE_BARCODES | default(false) }}
      PAPERLESS_CONSUMER_ENABLE_COLLATE_DOUBLE_SIDED: {{ PAPERLESS_CONSUMER_ENABLE_COLLATE_DOUBLE_SIDED | default(false) }}
      PAPERLESS_CONSUMER_COLLATE_DOUBLE_SIDED_SUBDIR_NAME: {{ PAPERLESS_CONSUMER_COLLATE_DOUBLE_SIDED_SUBDIR_NAME | default("double-sided") }}
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.{{ project_name }}-sec.loadbalancer.server.port=8000"
      - "traefik.http.routers.{{ project_name }}-sec.rule=Host(`{{ domain }}`)"
      - "traefik.docker.network=web_backend"
      - "traefik.http.routers.{{ project_name }}-sec.tls=true"
      - "traefik.http.routers.{{ project_name }}-sec.tls.certResolver={{ certificate_resolver }}"
      - "traefik.http.routers.{{ project_name }}.rule=Host(`{{ domain }}`)"
      - "traefik.http.routers.{{ project_name }}.middlewares=redirect-to-https@file"
      - "traefik.http.routers.{{ project_name }}-sec.middlewares=security_headers@file"

  gotenberg:
    image: docker.io/gotenberg/gotenberg:8
    restart: unless-stopped
    # The gotenberg chromium route is used to convert .eml files. We do not
    # want to allow external content like tracking pixels or even javascript.
    command:
      - "gotenberg"
      - "--chromium-disable-javascript=true"
      - "--chromium-allow-list=file:///tmp/.*"

  tika:
    image: ghcr.io/paperless-ngx/tika:latest
    restart: unless-stopped
