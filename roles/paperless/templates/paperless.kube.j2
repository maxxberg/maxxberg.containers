---
apiVersion: v1
kind: Deployment
metadata:
  annotations:
    io.containers.autoupdate: registry
  name: {{ project_name }}
  labels:
    app: {{ project_name }}
spec:
  selector:
    matchLabels:
      app: {{ project_name }}
  template:
    metadata:
      labels:
        app: {{ project_name }}
        traefik.enable: true
        traefik.http.services.{{ project_name }}-sec.loadbalancer.server.port: 8000
        traefik.http.routers.{{ project_name }}-sec.rule: Host(`{{ paperless_domain | mandatory }}`)
        traefik.docker.network: {{ backend_network }}
        traefik.http.routers.{{ project_name }}-sec.tls: true
        traefik.http.routers.{{ project_name }}-sec.tls.certResolver: letsdns
        traefik.http.routers.{{ project_name }}.rule: Host(`{{ paperless_domain }}`)
        traefik.http.routers.{{ project_name }}.middlewares: redirect-to-https@file
        traefik.http.routers.{{ project_name }}-sec.middlewares: security_headers@file
      name: {{ project_name }}
    spec:
      containers:
        - name: webserver
          image: "ghcr.io/paperless-ngx/paperless-ngx:{{ paperless_image_tag | default('latest') }}"
          livenessProbe:
            httpGet:
              path: /
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSecons: 10
            failureThreshold: 5
          envFrom:
            - configMapRef:
                name: {{ project_name }}-config
          env:
            - name: PAPERLESS_DBUSER
              valueFrom:
                secretKeyRef:
                  key: db_user
                  name: {{ project_name }}_secrets
            - name: PAPERLESS_DBPASS
              valueFrom:
                secretKeyRef:
                  key: db_password
                  name: {{ project_name }}_secrets
          volumeMounts:
            - name: data
              mountPath: /usr/src/paperless/data
            - name: media
              mountPath: /usr/src/paperless/media
            - name: export
              mountPath: /usr/src/paperless/export
            - name: consume
              mountPath: /usr/src/paperless/consume
        - name: broker
          image: "docker.io/library/redis:{{ paperless_redis_image_tag | default('7') }}"
          args:
            - "--bind 127.0.0.1"
          volumeMounts:
            - name: redisdata
              mountPath: /data
        - name: gotenberg
          image: "docker.io/gotenberg/gotenberg:{{ paperless_gotenberg_image_tag | default('8') }}"
          command: ["gotenberg"]
          args:
            - "--chromium-disable-javascript=true"
            - "--chromium-allow-list=file:///tmp/.*"
            - "--api-bind-ip=127.0.0.1"
        - name: tika
          image: docker.io/apache/tika:latest
          args:
            - "--host=127.0.0.1"
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ project_name }}-data
        - name: media
          persistentVolumeClaim:
            claimName: {{ project_name }}-media
        - name: export
          hostPath:
            path: {{ project_dir }}/export
            type: DirectoryOrCreate
        - name: consume
          hostPath:
            path: {{ project_dir }}/consume
            type: DirectoryOrCreate
        - name: redisdata
          persistentVolumeClaim:
            claimName: {{ project_name }}-redisdata
