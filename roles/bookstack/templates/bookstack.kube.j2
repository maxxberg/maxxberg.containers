---
apiVersion: v1
kind: Deployment
metadata:
  annotations:
    io.containers.autoupdate: registry
  name: {{ project_name }}
  labels:
    app: {{ project_name }}
spec:
  selector:
    matchLabels:
      app: {{ project_name }}
  template:
    metadata:
      labels:
        app: {{ project_name }}
        traefik.enable: "true"
        traefik.http.services.{{ project_name }}-sec.loadbalancer.server.port: "80"
        traefik.http.routers.{{ project_name }}-sec.rule: Host(`{{ domain | mandatory }}`)
        traefik.docker.network: web_backend
        traefik.http.routers.{{ project_name }}-sec.tls: "true"
        traefik.http.routers.{{ project_name }}-sec.tls.certResolver: letsdns
        traefik.http.routers.{{ project_name }}-sec.middlewares: security_headers@file
        traefik.http.routers.{{ project_name }}.rule: Host(`{{ domain }}`)
        traefik.http.routers.{{ project_name }}.middlewares: redirect-to-https@file
      name: {{ project_name }}
    spec:
      containers:
        - name: wiki
          image: "lscr.io/linuxserver/bookstack:{{ bookstack_version }}"
          envFrom:
            - configMapRef:
                name: {{ project_name }}-env
            - secretRef:
                name: {{ project_name }}_secrets
          volumeMounts:
            - mountPath: /config/www/.env
              name: env
            - mountPath: /config/log/bookstack/laravel.log
              name: log
            - mountPath: /config/backups/
              name: backups
            - mountPath: /config/www/
              name: www
      volumes:
        - name: env
          hostPath:
            path: {{ project_dir }}/.env
            type: FileOrCreate
        - name: log
          hostPath:
            path: {{ project_dir }}/bookstack.log
            type: FileOrCreate
        - name: backups
          hostPath:
            path: {{ project_dir }}/backups/
            type: DirectoryOrCreate
        - name: www
          persistentVolumeClaim:
            claimName: {{ project_name }}-www
