---
# tasks file for podman_service_deploy
# SPDX-License-Identifier: MIT-0
- name: Reset variables
  ansible.builtin.set_fact:
    podman_service_requires: []
    podman_service_networks: []

- name: Create directory
  ansible.builtin.file:
    path: "{{ project_dir }}"
    state: directory
    mode: "0755"

- name: Multiblock
  block:
    - name: Podman - Networks
      containers.podman.podman_network:
        name: "{{ item.name }}"
        internal: "{{ item.internal }}"
        subnet: "{{ item.subnet | default(omit) }}"
        state: present
      with_items: "{{ podman_service_deploy_config.networks }}"

    - name: Podman - Secrets
      containers.podman.podman_secret:
        name: "{{ project_name }}_secrets"
        data: |
          apiVersion: v1
          data:
          {% for secret in podman_service_deploy_config.get('secrets', []) %}
            {{ secret.name }}: {{ secret.value | b64encode }}
          {% endfor %}
          {% for key, value in podman_service_deploy_config.get('secrets_dict', {}).items() %}
            {{ key }}: {{ value | b64encode }}
          {% endfor %}
          kind: Secret
          metadata:
            name: {{ project_name }}_secrets
      when: |
       (podman_service_deploy_config.secrets is defined and podman_service_deploy_config.secrets|length > 0)
        or (podman_service_deploy_config.secrets_dict is defined and podman_service_deploy_config.secrets_dict|length > 0)

    - name: Create volumes
      containers.podman.podman_volume:
        name: "{{ item }}"
        state: present
      with_items: "{{ podman_service_deploy_config.volumes }}"
      when: podman_service_deploy_config.volumes is defined

    # - name: Assemble input_files
    #   ansible.builtin.set_fact:
    #     input_files: "{{ podman_service_deploy_config.kube_files }}"

    - name: Template kube file
      ansible.builtin.template:
        src: ../shared/templates/concat_variable.j2
        dest: "{{ project_dir }}/{{ project_name }}.kube"
        mode: "0644"
      vars:
        input_files: "{{ podman_service_deploy_config.kube_files }}"

    - name: Prepare network list
      ansible.builtin.set_fact:
        podman_service_networks: "{% if item.ipv4_address is defined %}{{ (podman_service_networks | default([])) + [item.name + ':ip=' + item.ipv4_address] }}{% else %}{{ (podman_service_networks | default([])) + [item.name] }}{% endif %}"
      with_items: "{{ podman_service_deploy_config.networks }}"

    - name: Prepare service dependencies
      ansible.builtin.set_fact:
        podman_service_requires: []

    - name: Add MariaDB to service dependencies
      ansible.builtin.set_fact:
        podman_service_requires: "{{ podman_service_requires + [podman_service_deploy_config.mariadb.name] }}"
      when: podman_service_deploy_config.mariadb is defined

    - name: Add Postgresql to service dependencies
      ansible.builtin.set_fact:
        podman_service_requires: "{{ podman_service_requires + [podman_service_deploy_config.postgresql.name] }}"
      when: podman_service_deploy_config.postgresql is defined

    - name: Add Redis to service dependencies
      ansible.builtin.set_fact:
        podman_service_requires: "{{ podman_service_requires + [redis_name] }}"
      when: podman_service_deploy_config.redis is defined

    - name: Create Quadlet
      containers.podman.podman_play:
        kube_file: "{{ project_dir }}/{{ project_name }}.kube"
        quadlet_filename: "{{ project_name }}"
        network: "{{ podman_service_networks }}"
        quadlet_options: |
            [Install]
            WantedBy=default.target
            [Unit]
            {% for service in podman_service_requires %}
            Requires={{ service }}.service
            {% endfor %}
        state: quadlet

# END OF BLOCK

- name: Include Postgresql
  ansible.builtin.include_tasks:
    file: postgresql.yaml
  when: podman_service_deploy_config.postgresql is defined

- name: Include Mariadb
  ansible.builtin.include_tasks:
    file: mariadb.yaml
  when: podman_service_deploy_config.mariadb is defined

- name: Include Redis
  ansible.builtin.include_tasks:
    file: redis.yaml
  when: podman_service_deploy_config.redis is defined
