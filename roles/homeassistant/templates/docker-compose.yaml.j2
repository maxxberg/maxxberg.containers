version: '3'

volumes:
    homea_config:
        external: true
networks:
    ha_net:
        external: true
    web_backend:
        external: true
services:
  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    volumes:
      - ./config:/config
      - /etc/localtime:/etc/localtime:ro
    restart: always
    privileged: true
    network_mode: host

  influxdb:
    image: influxdb:2.3
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME={{ influx_init_user }}
      - DOCKER_INFLUXDB_INIT_PASSWORD={{ influx_init_password }}
      - DOCKER_INFLUXDB_INIT_ORG={{ influx_init_org | default() }}
      - DOCKER_INFLUXDB_INIT_BUCKET={{ influx_init_bucket }}
      #- INFLUX_HA_PASSWORD={\{ influx_ha_password }\}
    volumes:
      - ./influx_data:/var/lib/influxdb2
      - ./influx_config:/etc/influxdb2
      #- ./init:/docker-entrypoint-initdb.d
    expose:
      - 8086
    networks:
        default:
        ha_net:
            ipv4_address: {{ ha_net_network | ansible.utils.ipmath(5) }}
        web_backend:
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.ha_influx-sec.loadbalancer.server.port=8086"
      - "traefik.http.routers.ha_influx-sec.rule=Host(`{{ influx_domain }}`)"
      - "traefik.docker.network=web_backend"
      - "traefik.http.routers.ha_influx-sec.tls=true"
      - "traefik.http.routers.ha_influx-sec.tls.certResolver=letsdns"
      - "traefik.http.routers.ha_influx.rule=Host(`{{ influx_domain }}`)"
      - "traefik.http.routers.ha_influx.middlewares=redirect-to-https@file"
      - "traefik.http.routers.ha_influx-sec.middlewares=security_headers@file"
    restart: always

  grafana:
    image: grafana/grafana:latest
    user: 1000:1000
    volumes:
      - ./grafana_data:/var/lib/grafana
      - ./grafana_config:/etc/grafana
    expose:
      - 3000
    environment:
      - GF_SECURITY_ADMIN_USER={{GRAFANA_USERNAME}}
      - GF_SECURITY_ADMIN_PASSWORD={{GRAFANA_PASSWORD}}
    networks:
      ha_net:
        ipv4_address: {{ ha_net_network | ansible.utils.ipmath(6) }}
      web_backend:
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.grafana-sec.loadbalancer.server.port=3000"
      - "traefik.http.routers.ha_grafana-sec.rule=Host(`{{ grafana_domain }}`)"
      - "traefik.docker.network=web_backend"
      - "traefik.http.routers.ha_grafana-sec.tls=true"
      - "traefik.http.routers.ha_grafana-sec.tls.certResolver=letsdns"
      - "traefik.http.routers.ha_grafana.rule=Host(`{{ grafana_domain }}`)"
      - "traefik.http.routers.ha_grafana.middlewares=redirect-to-https@file"
      - "traefik.http.routers.ha_grafana-sec.middlewares=security_headers@file"
    restart: always

  db:
    image: mariadb:10.5
    hostname: mariadb
    volumes:
      - ./mariadb_data:/var/lib/mysql
    environment:
      - MYSQL_HOST={{ ha_net_network | ansible.utils.ipmath(7) }}
      - MYSQL_DATABASE={{ db_name }}
      - MYSQL_USER={{ db_user }}
      - MYSQL_PASSWORD={{ db_password }}
      - MYSQL_ROOT_PASSWORD={{ db_root_password }}
    restart: always
    networks: 
      default:
      ha_net:
          ipv4_address: {{ ha_net_network | ansible.utils.ipmath(7) }}