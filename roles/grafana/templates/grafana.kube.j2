---
apiVersion: v1
kind: Deployment
metadata:
  annotations:
    io.containers.autoupdate: registry
  name: {{ project_name }}
  labels:
    app: {{ project_name }}
spec:
  selector:
    matchLabels:
      app: {{ project_name }}
  template:
    metadata:
      labels:
        app: {{ project_name }}
        traefik.enable: true
        traefik.http.services.{{ project_name }}-sec.loadbalancer.server.port: 3000
        traefik.http.routers.{{ project_name }}-sec.rule: Host(`{{ grafana_domain | mandatory }}`)
        traefik.docker.network: {{ backend_network }}
        traefik.http.routers.{{ project_name }}-sec.tls: true
        traefik.http.routers.{{ project_name }}-sec.tls.certResolver: letsdns
        traefik.http.routers.{{ project_name }}.rule: Host(`{{ grafana_domain }}`)
        traefik.http.routers.{{ project_name }}.middlewares: redirect-to-https@file
        traefik.http.routers.{{ project_name }}-sec.middlewares: security_headers@file
      name: {{ project_name }}
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
      containers:
        - name: grafana
          image: "docker.io/grafana/grafana:{{ grafana_image_tag | mandatory }}"
          env:
            - name: GF_SECURITY_ADMIN_USER
              value: {{ grafana_username }}
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: grafana_password
                  name: {{ project_name }}_secrets
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-data
            - mountPath: /etc/grafana
              name: grafana-config
      volumes:
        - name: grafana-data
          persistentVolumeClaim:
            claimName: {{ project_name }}-grafana-data
        - name: grafana-config
          persistentVolumeClaim:
            claimName: {{ project_name }}-grafana-config
